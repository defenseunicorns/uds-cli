# Copyright 2024 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

name: Helper workflow for E2E Tests
on:
  workflow_call: # This is the event that triggers the workflow
    inputs:
        fetch_zarf:
          description: "Set to true to fetch the Zarf package from main"
          required: false
          type: boolean
          default: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repo and setup the tooling for this job
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Setup golang
        uses: ./.github/actions/golang

      - name: Install UDS CLI
        uses: ./.github/actions/install-uds-cli

      # Conditional step to fetch zarf@main and update bundles that hardcode the ref
      - name: Fetch Zarf Package
        if: ${{ inputs.fetch_zarf }}
        run: |
          go get github.com/zarf-dev/zarf@main
          ZARF_VERSION=$(go list -m -json github.com/zarf-dev/zarf | jq -r .Version)
          yq eval "(.packages[] | select(.name == \"init\")).ref = \"$ZARF_VERSION\"" -i src/test/bundles/04-init/uds-bundle.yaml
          yq eval "(.packages[] | select(.name == \"init\")).ref = \"$ZARF_VERSION\"" -i src/test/bundles/14-optional-components/uds-bundle.yaml

      - name: Build CLI
        run: |
          uds run build-cli-linux-amd

      # Upload the contents of the build directory for later stages to use
      - name: Upload build artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: build-artifacts
          path: build/
          retention-days: 1

  test-bundle:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        test: [bundle, deploy-flags, index]
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: setup-using-previous-job
        uses: ./.github/actions/setup-from-previous

      - name: Run e2e bundle tests
        run: |
          build/uds run test:${{ matrix.test }}

      - name: Save logs
        if: always()
        uses: ./.github/actions/save-logs
        with:
          suffix: ${{ matrix.test }}

  test-dev:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: setup-using-previous-job
        uses: ./.github/actions/setup-from-previous

      - name: Run e2e dev
        run: |
          build/uds run test:dev

      - name: Save logs
        if: always()
        uses: ./.github/actions/save-logs
        with:
          suffix: test-dev

  test-variables:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: setup-using-previous-job
        uses: ./.github/actions/setup-from-previous

      - name: Run e2e variable tests
        run: |
          build/uds run test:variable

      - name: Save logs
        if: always()
        uses: ./.github/actions/save-logs
        with:
          suffix: test-variables

  test-optional-bundle:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: setup-using-previous-job
        uses: ./.github/actions/setup-from-previous

      - name: Run e2e optional bundle tests
        run: |
          build/uds run test:optional-bundle

      - name: Save logs
        if: always()
        uses: ./.github/actions/save-logs
        with:
          suffix: test-optional-bundle

  test-vendor:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: setup-using-previous-job
        uses: ./.github/actions/setup-from-previous

      - name: Install Trivy
        run: |
          sudo apt-get install wget apt-transport-https gnupg -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb generic main" | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy -y

      - name: Run e2e vendor tests
        run: |
          build/uds run test:vendor
          build/uds run test:completion

      - name: Save logs
        if: always()
        uses: ./.github/actions/save-logs
        with:
          suffix: test-vendor

  test-engine:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - uses: actions/setup-node@dda4788290998366da86b6a4f497909644397bb2
        with:
          node-version: 22

      - name: setup-using-previous-job
        uses: ./.github/actions/setup-from-previous

      - name: Run e2e optional bundle tests
        run: |
          build/uds run test:engine-e2e

      - name: Save logs
        if: always()
        uses: ./.github/actions/save-logs
        with:
          suffix: test-engine

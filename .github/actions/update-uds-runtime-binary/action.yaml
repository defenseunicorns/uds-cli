name: Update UDS Runtime Binary

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily
  workflow_dispatch:  # Allow manual triggers

jobs:
  update-uds-runtime-binaries:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Check for updates and download binaries
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BINARY_REPO: "defenseunicorns/uds-runtime"
      run: |
        # Define your binaries here
        binaries=("uds-runtime-darwin-amd64 uds-runtime-darwin-arm64 uds-runtime-linux-amd64" "uds-runtime-linux-arm64")

        LATEST_RELEASE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
          "https://api.github.com/repos/$BINARY_REPO/releases/latest" | jq -r .tag_name)

        CURRENT_VERSION=$(jq -r '.version // "none"' src/cmd/bin/version.json)

        if [ "$LATEST_RELEASE" != "$CURRENT_VERSION" ]; then
          echo "Updating binaries from $CURRENT_VERSION to $LATEST_RELEASE"

          for binary in "${binaries[@]}"; do
            echo "Downloading $binary"
            DOWNLOAD_URL="https://github.com/$BINARY_REPO/releases/download/${LATEST_RELEASE}/${binary}"
            curl -L -H "Authorization: token $GITHUB_TOKEN" \
              -o "src/cmd/bin/$binary" "$DOWNLOAD_URL"
            chmod +x "src/cmd/bin/$binary"
          done

          # Update version.json
          jq ".version = \"$LATEST_RELEASE\"" src/cmd/bin/version.json > src/cmd/bin/version.json.tmp
          mv src/cmd/bin/version.json.tmp src/cmd/bin/version.json

          git config user.name github-actions
          git config user.email github-actions@github.com
          git add src/cmd/bin
          git commit -m "Update binaries to version ${LATEST_RELEASE}"
          git push
        else
          echo "Binaries are up to date (version $CURRENT_VERSION)"
        fi

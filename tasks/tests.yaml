# Copyright 2024 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

tasks:
  - name: unit
    description: run all the unit tests
    actions:
      - cmd: go test ./... -failfast -v -timeout 5m
        dir: src/pkg
      - cmd: go test ./... -failfast -v -timeout 5m
        dir: src/cmd

  - name: e2e-ghcr
    description: run e2e tests that write to GHCR
    actions:
      - cmd: cd src/test/e2e && go test -failfast -v -timeout 30m -run ".*GHCR.*"

  - name: bundle
    description: only run tests in bundle_test.go
    actions:
      - cmd: cd src/test/e2e && go test -failfast -v -timeout 30m bundle_test.go commands_test.go main_test.go

  - name: deploy-flags
    description: only run tests in bundle_deploy_flags_test.go
    actions:
      - cmd: cd src/test/e2e && go test -failfast -v -timeout 30m bundle_deploy_flags_test.go commands_test.go main_test.go

  - name: index
    description: only run tests in bundle_index_test.go
    actions:
      - cmd: cd src/test/e2e && go test -failfast -v -timeout 30m bundle_index_test.go common.go commands_test.go main_test.go

  - name: completion
    description: only run tests in completion_test.go
    actions:
      - cmd: cd src/test/e2e && go test -failfast -v -timeout 30m completion_test.go commands_test.go main_test.go

  - name: dev
    description: only run tests in dev_test.go and state_test.go (grouped bc neither require zarf init)
    actions:
      # commenting out state tests for now as its behind a feature flag and not ready for CI
      #- cmd: cd src/test/e2e && go test -failfast -v -timeout 30m dev_test.go state_test.go commands_test.go main_test.go
      - cmd: cd src/test/e2e && go test -failfast -v -timeout 30m dev_test.go commands_test.go main_test.go

  - name: variable
    description: only run tests in variable_test.go
    actions:
      - cmd: cd src/test/e2e && go test -failfast -v -timeout 30m variable_test.go commands_test.go main_test.go

  - name: optional-bundle
    description: only run tests in optional_bundle_test.go
    actions:
      - cmd: cd src/test/e2e && go test -failfast -v -timeout 30m optional_bundle_test.go commands_test.go main_test.go

  - name: vendor
    description: only run tests for vendored apps (zarf, maru)
      - cmd: cd src/test/e2e && go test -failfast -v -timeout 30m zarf_test.go runner_test.go commands_test.go main_test.go

  - name: engine-e2e
    description: only run engine e2e tests
    actions:
      - cmd: rm -fr tmp && git clone --depth=1 https://github.com/defenseunicorns/uds-core.git tmp/uds-core
        description: clone UDS Core
      - cmd: |
          build/uds zarf tools kubectl apply -f tmp/uds-core/src/pepr/uds-cluster-crds/templates/clusterconfig.uds.dev.yaml
          build/uds zarf tools kubectl create namespace pepr-system
          build/uds zarf tools kubectl apply -f - <<EOF
          apiVersion: uds.dev/v1alpha1
          kind: ClusterConfig
          metadata:
            name: uds-cluster-config
          spec:
            attributes:
              clusterName: ""
              tags: []
            expose:
              adminDomain: ""
              caCert: ""
              domain: uds.dev
            networking:
              kubeApiCIDR: ""
              kubeNodeCIDRs: []
            policy:
              allowAllNsExemptions: false
          EOF
          build/uds zarf tools kubectl apply -f - <<EOF
          apiVersion: v1
          kind: Secret
          metadata:
            name: uds-operator-config
            namespace: pepr-system
          type: Opaque
          stringData:
            devMode: "active"
          EOF
        description: "Deploy the UDS Cluster Config CRD, CR, and config secret"
      - cmd: cd tmp/uds-core && npm i && npx pepr deploy --confirm
        description: cd into the tmp/uds-core directory and deploy UDS Core's Pepr module
      - cmd: cd src/test/e2e && go test -failfast -v -timeout 30m monitor_test.go commands_test.go main_test.go
        description: run the engine e2e tests

  - name: push-test-artifacts
    description: push artifacts that UDS CLI tests rely on to GHCR
    actions:
      - cmd: ./hack/push-test-artifacts.sh

  - name: clean-test-artifacts
    description: removes bundles and zarf packages that have been created from previous test runs
    actions:
      - cmd: find src/test -type f -name '*.tar.zst' -delete

  - name: ci-uds-core-smoke-test
    description: deploy UDS Core (slim dev) and run validations
    actions:
      - cmd: build/uds deploy k3d-core-slim-dev:latest --confirm
      - cmd: |
          # basic status checks
          build/uds zarf tools wait-for gateways.networking.istio.io admin-gateway -n istio-admin-gateway --timeout 10s
          build/uds zarf tools wait-for gateways.networking.istio.io tenant-gateway -n istio-tenant-gateway --timeout 10s
          build/uds zarf tools wait-for package keycloak -n keycloak --timeout 10s
